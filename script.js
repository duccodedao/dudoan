let interval = 1; // M·∫∑c ƒë·ªãnh l√† 1 ph√∫t
let countdownTime = interval * 60; // Th·ªùi gian ƒë·∫øm ng∆∞·ª£c t√≠nh b·∫±ng gi√¢y
let history = [];
let realtimeStarted = false;

document.getElementById("interval").addEventListener("change", function() {
    interval = parseInt(this.value);
    countdownTime = interval * 60;
});

function getRandomNumber() {
    return Math.floor(Math.random() * 10);
}

function getColorAndSize(number) {
    let size = number <= 4 ? "Nh·ªè" : "L·ªõn";
    let color = "";

    if (number === 0 || number === 5) {
        color = "üü£üî¥";
    } else if (number % 2 === 0) {
        color = "üî¥";
    } else {
        color = "üü¢";
    }

    return { size, color };
}

function updateResult() {
    let number = getRandomNumber();
    let { size, color } = getColorAndSize(number);
    
    let sessionElement = document.getElementById("session");
    let session = parseInt(sessionElement.value);

    // L∆∞u v√†o l·ªãch s·ª≠
    history.unshift({ session, number, size, color });

    // T·ª± ƒë·ªông tƒÉng s·ªë phi√™n
    sessionElement.value = session + 1;

    // ·∫®n hi·ªáu ·ª©ng loading
    document.getElementById("loading").style.display = "none";

    // Hi·ªÉn th·ªã k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng Swal.fire
    Swal.fire({
        title: 'K·∫øt qu·∫£',
        html: `Phi√™n: ${session}, S·ªë: ${number}, Lo·∫°i: ${size}, M√†u: ${color}`,
        icon: 'success',
        confirmButtonText: 'OK'
    }).then(() => {
        // G·ªçi l·∫°i h√†m updateResult() ƒë·ªÉ d·ª± ƒëo√°n phi√™n ti·∫øp theo
        realtimeStarted = false; // Reset tr·∫°ng th√°i ƒë·ªÉ c√≥ th·ªÉ b·∫Øt ƒë·∫ßu l·∫°i
    });

    // C·∫≠p nh·∫≠t b·∫£ng l·ªãch s·ª≠
    renderHistory();
}

function toggleHistory() {
    let historyElement = document.getElementById("history");
    if (historyElement.style.display === "block") {
        historyElement.style.display = "none";
    } else {
        historyElement.style.display = "block";
        renderHistory();
    }
}

function renderHistory() {
    let historyTableBody = document.getElementById("historyTable").getElementsByTagName("tbody")[0];
    historyTableBody.innerHTML = "";
    history.forEach(entry => {
        let row = historyTableBody.insertRow(0); // Th√™m v√†o ƒë·∫ßu b·∫£ng
        row.insertCell(0).textContent = entry.session;
        row.insertCell(1).textContent = entry.number;
        row.insertCell(2).textContent = entry.size;
        row.insertCell(3).textContent = entry.color;
    });
}

function updateClock() {
    let now = new Date();
    let hours = String(now.getHours()).padStart(2, '0');
    let minutes = String(now.getMinutes()).padStart(2, '0');
    let seconds = String(now.getSeconds()).padStart(2, '0');

    document.getElementById("clock").textContent = `Th·ªùi gian th·ª±c: ${hours}:${minutes}:${seconds}`;
}

function updateCountdown() {
    let now = new Date();
    let seconds = now.getSeconds();
    let countdown = (countdownTime - seconds % countdownTime) % countdownTime;
    document.getElementById("countdown").textContent = `ƒê·∫øm ng∆∞·ª£c: ${countdown}s`;
}

setInterval(function() {
    updateClock();
    updateCountdown();
    let now = new Date();
    if (now.getSeconds() === 5 && !realtimeStarted) {
        realtimeStarted = true; // ƒê·∫∑t tr·∫°ng th√°i ƒë·ªÉ ngƒÉn ch·∫∑n nhi·ªÅu l·∫ßn ch·∫°y ƒë·ªìng th·ªùi
        document.getElementById("loading").style.display = "block";
        setTimeout(updateResult, 1000); // Gi·∫£ l·∫≠p hi·ªáu ·ª©ng loading trong 1 gi√¢y
    }
}, 1000);
